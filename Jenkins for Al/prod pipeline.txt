pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "tdvolgograd/untitled7"
        REGISTRY_CREDENTIALS = '38ba95ce-6c10-4201-b8db-d276d469f83f' // Jenkins credentials ID for Docker Hub
    }

    stages {
        
        stage('Pull Prod, Tag as Back, and Push') {
    steps {
        script {
            docker.withRegistry('', "${REGISTRY_CREDENTIALS}") {
                // Pull the image with the 'prod' tag
                sh "docker pull tdvolgograd/untitled7:prod"
                
                // Tag the image as 'back'
                sh "docker tag tdvolgograd/untitled7:prod tdvolgograd/untitled7:back"

                // Push the image with the 'back' tag
                sh "docker push tdvolgograd/untitled7:back"
            }
        }
    }
}
        stage('Clone Repository') {
            steps {
                git 'https://github.com/tdvolgograd/untitled7.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE}:prod")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('', "${REGISTRY_CREDENTIALS}") {
                        docker.image("${DOCKER_IMAGE}:prod").push()
                    }
                }
            }
        }

        stage('Deploy to Product') {
            steps {
                script {
                     sh """
            # Check if a container with the name 'untitled7-prod' exists
                docker stop untitled7-prod
                sleep 10
                docker rm untitled7-prod
        
            
            # Pull the latest image
            docker pull tdvolgograd/untitled7:prod
            
            # Run the container with the latest image
            docker run -d --name untitled7-prod -p 80:80 tdvolgograd/untitled7:prod
            """
                }
            }
        }

        stage('Test Deployment') {
            steps {
                script {
                    sh "curl -f http://localhost:8088 || exit 1"
                }
            }
        }

        
           
        }
    }